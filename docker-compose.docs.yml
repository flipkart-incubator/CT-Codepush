version: '3.8'

services:
  codepush-docs:
    build:
      context: .
      dockerfile: Dockerfile.docs
    container_name: codepush-docs
    ports:
      - "3001:80"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    volumes:
      - docs-logs:/var/log/nginx
    networks:
      - codepush-docs-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.codepush-docs.rule=Host(`docs.your-domain.com`)"
      - "traefik.http.routers.codepush-docs.tls=true"
      - "traefik.http.routers.codepush-docs.tls.certresolver=letsencrypt"

  # Optional: Traefik reverse proxy with SSL
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=your-email@domain.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    networks:
      - codepush-docs-network
    restart: unless-stopped

  # Optional: Monitoring with Uptime Kuma
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    volumes:
      - uptime-kuma-data:/app/data
    ports:
      - "3002:3001"
    restart: unless-stopped
    networks:
      - codepush-docs-network

volumes:
  docs-logs:
    driver: local
  uptime-kuma-data:
    driver: local

networks:
  codepush-docs-network:
    driver: bridge 